name: Docker

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for DockerHub
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  REPO_NAME: ${{ github.repository }}
  REPO_ORG: "oandrefonseca"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        image_name:
          - "scAgnostic"
          - "scAligners"
          - "scRPackages"
          - "scRBase"
          - "scVariant"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login to DockerHub except on PR
      - name: Log into DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Set the name of the docker repos we are going to push this container to
      - name: Set docker image name
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO_ORG }}/${{ matrix.image_name }}

      # Build and push Docker image with Buildx (push on push events, not on PR)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: rna
          file: "rna/${{ matrix.image_name }}.Dockerfile"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.image_name }}
          cache-to: type=gha,mode=max,scope=${{ matrix.image_name }}
